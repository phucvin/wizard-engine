// Capabilities a probe may use dynamically, which can affect engine optimizations around
// instrumentation.
enum ProbeCapability {
	READ_PC,		// read the program counter;	{DynamicLoc.pc}
	READ_FUNC,		// read the probed function;	{DynamicLoc.func}
	READ_OPERAND,		// read a specific operand;	{DynamicLoc.getFrameAccessor().getOperand(#k)}
	READ_OPERANDS,		// read any operand;		{DynamicLoc.getFrameAccessor().getOperand(n)}
	READ_LOCAL,		// read a specific local;	{DynamicLoc.getFrameAccessor().getLocal(#k)}
	READ_LOCALS,		// read any local;		{DynamicLoc.getFrameAccessor().getLocal(n)}
	WRITE_OPERAND,		// write a specific operand;	{DynamicLoc.getFrameAccessor().setOperand(#k)}
	WRITE_OPERANDS,		// write any operand;		{DynamicLoc.getFrameAccessor().setOperand(n)}
	WRITE_LOCAL,		// write a specific local;	{DynamicLoc.getFrameAccessor().setLocal(#k)}
	WRITE_LOCALS,		// write any local;		{DynamicLoc.getFrameAccessor().setLocal(n)}
	BR,			// perform a branch in probed function
	TRAP,			// force a trap in probed function
	THROW,			// throw an exception in probed function
	SWITCH,			// switch stacks, suspending probed function
	TAIL_CALL,		// perform a tail-call
	HOST_CALL,		// call a host function
	WASM_CALL,		// call a Wasm function
	EDIT_LOCAL_PROBES,	// insert or remove local probes
	EDIT_GLOBAL_PROBES,	// insert or remove global probes
	LOAD_MODULES,		// load new Wasm modules
	COMPILE_FUNC,		// compile or alter tiering for a function
	ADD_FUNC,		// add new functions to a module
	REPLACE_FUNC,		// replace the body of a function
}

